# from sqlalchemy import create_engine
# # PostgreSQL
# engine = create_engine('postgresql://user:password@localhost:5432/mydatabase')
# # MySQL
# engine = create_engine('mysql+pymysql://user:password@localhost:3306/mydatabase')
# # SQLite (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞)
# engine = create_engine('sqlite:///path/to/database.db')
# # SQLite (–≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏)
# engine = create_engine('sqlite:///:memory:')
#
# from sqlalchemy import create_engine, Column, Integer, String
# from sqlalchemy.orm import sessionmaker, declarative_base
# Base = declarative_base()
# engine = create_engine('sqlite:///example.db')
# # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å `User`, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ `Base`.
# # –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å—É—â–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
# class User(Base):
# __tablename__ = 'users'
# id = Column(Integer, primary_key=True)
# name = Column(String(30))
# age = Column(Integer)
# Session = sessionmaker(bind=engine)
# session = Session()
# # –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—è–≤–∏–ª–∞—Å—å —Ç–∞–±–ª–∏—Ü—ã –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥
# `create_all()` –æ–±—ä–µ–∫—Ç–∞ `metadata` –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ `Base`
# # SQLAlchemy –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å—ã –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–µ—Ç
# —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
# Base.metadata.create_all(engine)
# # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# new_user = User(name="John Doe", age=30)
# # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –≤ —Å–µ—Å—Å–∏—é —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `add()`.
# session.add(new_user)

from sqlalchemy import create_engine, Column, Integer, String, Numeric, Boolean, ForeignKey
from sqlalchemy.orm import sessionmaker, DeclarativeBase, relationship

# üîπ –ó–∞–¥–∞—á–∞ 1: –¥–≤–∏–∂–æ–∫ SQLite –≤ –ø–∞–º—è—Ç–∏
engine = create_engine("sqlite:///:memory:", echo=True)

# üîπ –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
class Base(DeclarativeBase):
    pass

# üîπ –ó–∞–¥–∞—á–∞ 4: –º–æ–¥–µ–ª—å Category
class Category(Base):
    __tablename__ = "categories"
    id = Column(Integer, primary_key=True)
    name = Column(String(100), nullable=False)
    description = Column(String(255))
    products = relationship("Product", back_populates="category")

# üîπ –ó–∞–¥–∞—á–∞ 3: –º–æ–¥–µ–ª—å Product
class Product(Base):
    __tablename__ = "products"
    id = Column(Integer, primary_key=True)
    name = Column(String(100), nullable=False)
    price = Column(Numeric(10, 2), nullable=False)
    in_stock = Column(Boolean, default=True)
    category_id = Column(Integer, ForeignKey("categories.id"))
    category = relationship("Category", back_populates="products")

# üîπ –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã
Base.metadata.create_all(engine)

# üîπ –ó–∞–¥–∞—á–∞ 2: —Å–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é
Session = sessionmaker(bind=engine)
session = Session()
